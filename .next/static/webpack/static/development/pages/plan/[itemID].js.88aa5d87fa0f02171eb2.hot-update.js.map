{"version":3,"file":"static/webpack/static/development/pages/plan/[itemID].js.88aa5d87fa0f02171eb2.hot-update.js","sources":["webpack:///./pages/plan/[itemID].js"],"sourcesContent":["import { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport axiosInstance from \"../../config\";\nimport { loadGetInitialProps } from \"next/dist/next-server/lib/utils\";\n\nconst ItemDetailsPage = () => {\n\n  const router = useRouter();\n  const { itemID } = router.query;\n  const [itemDetails, setItemDetails] = useState(\"\");\n  const [partipicantName, setPartipicantName] = useState(\"\");\n  const [optionsSelected, setOptionsSelected] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"bug test\");\n    getPlan();\n  },[]); // use getinitialprops instead useeffect\n\n  const getPlan = async () => {\n    let abc = await itemID;\n    console.log(itemID)\n    const doc = await axiosInstance.get(\"api/freeone\", { params: { itemID } });\n    setItemDetails(doc.data);\n  };\n\n\n  const postParticipant = async () => {\n    const doc = await axiosInstance.post(\n      \"api/participant\",\n      { partipicantName, optionsSelected },\n      { params: { itemID } }\n    );\n    // const doc = await axiosInstance.post('api/participant', { params: { itemID } });\n    console.log(doc);\n  };\n\n  const checkboxTest = async e => {\n    if (e.target.checked) {\n      setOptionsSelected([...optionsSelected, e.target.id]);\n      return;\n    }\n    let tempOptionsSelected = [...optionsSelected];\n    const check = tempOptionsSelected.indexOf(e.target.id);\n    if (check > -1) tempOptionsSelected.splice(check, 1);\n    setOptionsSelected(tempOptionsSelected);\n  };\n\n  return (\n    <Layout>\n      <div className=\"container\">\n        <br />\n        <div className=\"columns\">\n          <div className=\"column is-1\"></div>\n          <div className=\"column\">\n            <div\n              className=\"is-fullwidth\"\n              style={{ padding: \".5rem\", backgroundColor: \"#C8E4FF\" }}\n            >\n              <p\n                onClick={() => {\n                  console.log(optionsSelected);\n                }}\n              >\n                Poll by <strong>{itemDetails.nameGenerater}</strong>\n              </p>\n            </div>\n            <br />\n            <div className=\"columns\">\n              <div className=\"column is-5\">\n                <p className=\"title has-text-info has-text-weight-normal\">\n                  {itemDetails.boardTitle}\n                </p>\n                <p>\n                  {itemDetails.description\n                    ? itemDetails.description\n                    : \"Please indicate when you are available. Then click 'Save'.\"}\n                </p>\n                <br />\n                <table className=\"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\">\n                  <thead>\n                    <th style={{ border: \"none\" }}></th>\n\n                    {/* Put possible dates as table headers */}\n                    {itemDetails.possibleDates\n                      ? itemDetails.possibleDates.map((element, index) => (\n                          <th className=\"has-background-grey-lighter has-text-centered\">\n                            {element}\n                          </th>\n                        ))\n                      : null}\n                  </thead>\n                  <tbody>\n                    <tr className=\"be-first\">\n                      <td\n                        className=\"has-background-primary has-text-white\"\n                        colSpan=\"100%\"\n                      >\n                        Be the first to vote in this poll!\n                      </td>\n                    </tr>\n                    <tr style={{ backgroundColor: \"#C8E4FF\" }}>\n                      <td style={{ borderColor: \"white\" }}>\n                        <div class=\"field\">\n                          <div class=\"control\">\n                            <input\n                              class=\"input is-primary\"\n                              type=\"text\"\n                              placeholder=\"Your name\"\n                              onChange={e => {\n                                setPartipicantName(e.target.value);\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </td>\n\n                      {/* Columns which has checkbox to check possible dates*/}\n                      {itemDetails.possibleDates\n                        ? itemDetails.possibleDates.map((element, index) => (\n                            <td\n                              style={{ borderColor: \"white\" }}\n                              className=\"has-text-centered\"\n                            >\n                              <label class=\"checkbox\">\n                                <input\n                                  type=\"checkbox\"\n                                  id={index}\n                                  onChange={checkboxTest}\n                                />\n                              </label>\n                            </td>\n                          ))\n                        : null}\n                    </tr>\n                  </tbody>\n                </table>\n                <p>\n                  <a\n                    className=\"button is-link has-text-right\"\n                    onClick={postParticipant}\n                  >\n                    Save\n                  </a>\n                </p>\n                <br />\n              </div>\n              <div className=\"column is-5\"></div>\n              <div className=\"column is-2\">x</div>\n            </div>\n          </div>\n          <div className=\"column is-1\"></div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ItemDetailsPage;\n// 5e708dce790a493928aac6f0\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAFA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAJA;AAGA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AALA;AACA;AAKA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AACA;AADA;AAKA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}