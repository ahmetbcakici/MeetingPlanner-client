{"ast":null,"code":"var _jsxFileName = \"/home/abugra/Desktop/MeetingPlanner-client/pages/plan/[itemID].js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//import { useRouter } from 'next/router'; // not usable for class components, we can try to use withRouter as alternative\nimport { withRouter } from 'next/router';\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport axiosInstance from '../../config';\nexport default class ItemDetailsPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      partipicantName: '',\n      itemDetails: '',\n      optionsSelected: '',\n      itemID: '5e77a'\n    });\n\n    _defineProperty(this, \"getPlan\", async () => {\n      const {\n        itemID\n      } = this.state;\n      const doc = await axiosInstance.get('api/freeone', {\n        params: {\n          itemID\n        }\n      });\n      this.setState({\n        itemDetails: doc.data\n      });\n    });\n\n    _defineProperty(this, \"postParticipant\", async () => {\n      const {\n        partipicantName,\n        optionsSelected,\n        itemID\n      } = this.state;\n      const doc = await axiosInstance.post('api/participant', {\n        partipicantName,\n        optionsSelected\n      }, {\n        params: {\n          itemID\n        }\n      }); // const doc = await axiosInstance.post('api/participant', { params: { itemID } });\n\n      console.log(doc);\n    });\n\n    _defineProperty(this, \"checkboxTest\", async e => {\n      const {\n        optionsSelected\n      } = this.state;\n\n      if (e.target.checked) {\n        this.setState({\n          optionsSelected: [...optionsSelected, e.target.id]\n        });\n        return;\n      }\n\n      let tempOptionsSelected = [...optionsSelected];\n      const check = tempOptionsSelected.indexOf(e.target.id);\n      if (check > -1) tempOptionsSelected.splice(check, 1);\n      this.setState({\n        optionsSelected: tempOptionsSelected\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getPlan();\n  }\n\n  render() {\n    const {\n      itemDetails\n    } = this.state;\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"column is-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"is-fullwidth\",\n      style: {\n        padding: '.5rem',\n        backgroundColor: '#C8E4FF'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      onClick: () => {\n        console.log(this.state.optionsSelected);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Poll by\", ' ', __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, itemDetails.nameGenerater))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"column is-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"title has-text-info has-text-weight-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, itemDetails.boardTitle), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, itemDetails.description ? itemDetails.description : \"Please indicate when you are available. Then click 'Save'.\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), __jsx(\"table\", {\n      className: \"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      style: {\n        border: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), itemDetails.possibleDates ? itemDetails.possibleDates.map((element, index) => __jsx(\"th\", {\n      className: \"has-background-grey-lighter has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, element)) : null), __jsx(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      className: \"be-first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      className: \"has-background-primary has-text-white\",\n      colSpan: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Be the first to vote in this poll!\")), __jsx(\"tr\", {\n      style: {\n        backgroundColor: '#C8E4FF'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      style: {\n        borderColor: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      class: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      class: \"input is-primary\",\n      type: \"text\",\n      placeholder: \"Your name\",\n      onChange: e => {\n        this.setState({\n          partipicantName: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })))), itemDetails.possibleDates ? itemDetails.possibleDates.map((element, index) => __jsx(\"td\", {\n      style: {\n        borderColor: 'white'\n      },\n      className: \"has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      class: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: index,\n      onChange: this.checkboxTest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })))) : null))), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"button is-link has-text-right\",\n      onClick: this.postParticipant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Save\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"column is-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"column is-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"x\"))), __jsx(\"div\", {\n      className: \"column is-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))));\n  }\n\n} //export default ItemDetailsPage;\n// 5e708dce790a493928aac6f0","map":{"version":3,"sources":["/home/abugra/Desktop/MeetingPlanner-client/pages/plan/[itemID].js"],"names":["withRouter","React","Component","Layout","axiosInstance","ItemDetailsPage","partipicantName","itemDetails","optionsSelected","itemID","state","doc","get","params","setState","data","post","console","log","e","target","checked","id","tempOptionsSelected","check","indexOf","splice","componentDidMount","getPlan","render","padding","backgroundColor","nameGenerater","boardTitle","description","border","possibleDates","map","element","index","borderColor","value","checkboxTest","postParticipant"],"mappings":"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","sourcesContent":["//import { useRouter } from 'next/router'; // not usable for class components, we can try to use withRouter as alternative\nimport {withRouter} from 'next/router';\nimport React, {Component} from 'react';\nimport Layout from '../../components/Layout';\nimport axiosInstance from '../../config';\n\nexport default class ItemDetailsPage extends Component {\n  state = {\n    partipicantName: '',\n    itemDetails: '',\n    optionsSelected: '',\n    itemID: '5e77a',\n  };\n\n  componentDidMount () {\n    this.getPlan ();\n  }\n\n  getPlan = async () => {\n    const {itemID} = this.state;\n    const doc = await axiosInstance.get ('api/freeone', {\n      params: {itemID},\n    });\n    this.setState ({itemDetails: doc.data});\n  };\n\n  postParticipant = async () => {\n    const {partipicantName, optionsSelected, itemID} = this.state;\n    const doc = await axiosInstance.post (\n      'api/participant',\n      {partipicantName, optionsSelected},\n      {params: {itemID}}\n    );\n    // const doc = await axiosInstance.post('api/participant', { params: { itemID } });\n    console.log (doc);\n  };\n\n  checkboxTest = async e => {\n    const {optionsSelected} = this.state;\n    if (e.target.checked) {\n      this.setState ({\n        optionsSelected: [...optionsSelected, e.target.id],\n      });\n      return;\n    }\n    let tempOptionsSelected = [...optionsSelected];\n    const check = tempOptionsSelected.indexOf (e.target.id);\n    if (check > -1) tempOptionsSelected.splice (check, 1);\n    this.setState ({optionsSelected: tempOptionsSelected});\n  };\n  render () {\n    const {itemDetails} = this.state;\n    return (\n      <Layout>\n        <div className=\"container\">\n          <br />\n          <div className=\"columns\">\n            <div className=\"column is-1\" />\n            <div className=\"column\">\n              <div\n                className=\"is-fullwidth\"\n                style={{\n                  padding: '.5rem',\n                  backgroundColor: '#C8E4FF',\n                }}\n              >\n                <p\n                  onClick={() => {\n                    console.log (this.state.optionsSelected);\n                  }}\n                >\n                  Poll by{' '}\n                  <strong>{itemDetails.nameGenerater}</strong>\n                </p>\n              </div>\n              <br />\n              <div className=\"columns\">\n                <div className=\"column is-5\">\n                  <p className=\"title has-text-info has-text-weight-normal\">\n                    {itemDetails.boardTitle}\n                  </p>\n                  <p>\n                    {itemDetails.description\n                      ? itemDetails.description\n                      : \"Please indicate when you are available. Then click 'Save'.\"}\n                  </p>\n                  <br />\n                  <table className=\"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\">\n                    <thead>\n                      <th style={{border: 'none'}} />\n\n                      {/* Put possible dates as table headers */}\n                      {itemDetails.possibleDates\n                        ? itemDetails.possibleDates.map ((element, index) => (\n                            <th className=\"has-background-grey-lighter has-text-centered\">\n                              {element}\n                            </th>\n                          ))\n                        : null}\n                    </thead>\n                    <tbody>\n                      <tr className=\"be-first\">\n                        <td\n                          className=\"has-background-primary has-text-white\"\n                          colSpan=\"100%\"\n                        >\n                          Be the first to vote in this poll!\n                        </td>\n                      </tr>\n                      <tr style={{backgroundColor: '#C8E4FF'}}>\n                        <td style={{borderColor: 'white'}}>\n                          <div class=\"field\">\n                            <div class=\"control\">\n                              <input\n                                class=\"input is-primary\"\n                                type=\"text\"\n                                placeholder=\"Your name\"\n                                onChange={e => {\n                                  this.setState ({\n                                    partipicantName: e.target.value,\n                                  });\n                                }}\n                              />\n                            </div>\n                          </div>\n                        </td>\n\n                        {/* Columns which has checkbox to check possible dates*/}\n                        {itemDetails.possibleDates\n                          ? itemDetails.possibleDates.map ((element, index) => (\n                              <td\n                                style={{\n                                  borderColor: 'white',\n                                }}\n                                className=\"has-text-centered\"\n                              >\n                                <label class=\"checkbox\">\n                                  <input\n                                    type=\"checkbox\"\n                                    id={index}\n                                    onChange={this.checkboxTest}\n                                  />\n                                </label>\n                              </td>\n                            ))\n                          : null}\n                      </tr>\n                    </tbody>\n                  </table>\n                  <p>\n                    <a\n                      className=\"button is-link has-text-right\"\n                      onClick={this.postParticipant}\n                    >\n                      Save\n                    </a>\n                  </p>\n                  <br />\n                </div>\n                <div className=\"column is-5\" />\n                <div className=\"column is-2\">x</div>\n              </div>\n            </div>\n            <div className=\"column is-1\" />\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\n//export default ItemDetailsPage;\n// 5e708dce790a493928aac6f0\n"]},"metadata":{},"sourceType":"module"}