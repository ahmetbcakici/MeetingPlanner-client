{"ast":null,"code":"var _jsxFileName = \"/home/abugra/Desktop/MeetingPlanner-client/pages/plan/[itemID].js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from 'next/router';\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport axiosInstance from '../../config';\nexport default class ItemDetailsPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      partipicantName: '',\n      itemDetails: '',\n      optionsSelected: '',\n      itemID: 5e778\n    });\n\n    _defineProperty(this, \"getPlan\", async () => {\n      console.log(\"lll\");\n      const {\n        itemID\n      } = this.state;\n      const doc = await axiosInstance.get('api/freeone', {\n        params: {\n          itemID\n        }\n      });\n      this.setState({\n        itemDetails: doc.data\n      }, () => {\n        console.log(this.state.itemDetails);\n      });\n    });\n\n    _defineProperty(this, \"postParticipant\", async () => {\n      const {\n        partipicantName,\n        optionsSelected,\n        itemID\n      } = this.state;\n      const doc = await axiosInstance.post('api/participant', {\n        partipicantName,\n        optionsSelected\n      }, {\n        params: {\n          itemID\n        }\n      }); // const doc = await axiosInstance.post('api/participant', { params: { itemID } });\n\n      console.log(doc);\n    });\n\n    _defineProperty(this, \"checkboxTest\", async e => {\n      const {\n        optionsSelected\n      } = this.state;\n\n      if (e.target.checked) {\n        this.setState({\n          optionsSelected: [...optionsSelected, e.target.id]\n        });\n        return;\n      }\n\n      let tempOptionsSelected = [...optionsSelected];\n      const check = tempOptionsSelected.indexOf(e.target.id);\n      if (check > -1) tempOptionsSelected.splice(check, 1);\n      this.setState({\n        optionsSelected: tempOptionsSelected\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.getPlan();\n  }\n\n  render() {\n    const {\n      itemDetails\n    } = this.state;\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"column is-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"is-fullwidth\",\n      style: {\n        padding: '.5rem',\n        backgroundColor: '#C8E4FF'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      onClick: () => {\n        console.log(this.state.optionsSelected);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Poll by \", __jsx(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, itemDetails.nameGenerater))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"column is-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"title has-text-info has-text-weight-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, itemDetails.boardTitle), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, itemDetails.description ? itemDetails.description : \"Please indicate when you are available. Then click 'Save'.\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), __jsx(\"table\", {\n      className: \"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      style: {\n        border: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), itemDetails.possibleDates ? itemDetails.possibleDates.map((element, index) => __jsx(\"th\", {\n      className: \"has-background-grey-lighter has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, element)) : null), __jsx(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      className: \"be-first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      className: \"has-background-primary has-text-white\",\n      colSpan: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Be the first to vote in this poll!\")), __jsx(\"tr\", {\n      style: {\n        backgroundColor: '#C8E4FF'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      style: {\n        borderColor: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      class: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      class: \"input is-primary\",\n      type: \"text\",\n      placeholder: \"Your name\",\n      onChange: e => {\n        this.setState({\n          partipicantName: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))), itemDetails.possibleDates ? itemDetails.possibleDates.map((element, index) => __jsx(\"td\", {\n      style: {\n        borderColor: 'white'\n      },\n      className: \"has-text-centered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      class: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      id: index,\n      onChange: this.checkboxTest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })))) : null))), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: \"button is-link has-text-right\",\n      onClick: this.postParticipant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Save\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"column is-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"column is-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"x\"))), __jsx(\"div\", {\n      className: \"column is-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))));\n  }\n\n} //export default ItemDetailsPage;\n// 5e708dce790a493928aac6f0","map":{"version":3,"sources":["/home/abugra/Desktop/MeetingPlanner-client/pages/plan/[itemID].js"],"names":["useRouter","React","Component","Layout","axiosInstance","ItemDetailsPage","partipicantName","itemDetails","optionsSelected","itemID","console","log","state","doc","get","params","setState","data","post","e","target","checked","id","tempOptionsSelected","check","indexOf","splice","componentDidMount","getPlan","render","padding","backgroundColor","nameGenerater","boardTitle","description","border","possibleDates","map","element","index","borderColor","value","checkboxTest","postParticipant"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\nimport React ,{ Component } from 'react';\nimport Layout from '../../components/Layout';\nimport axiosInstance from '../../config';\n\n\n\nexport default class ItemDetailsPage extends Component{\n\t\n\tstate={\n\t\tpartipicantName:'',\n\t\titemDetails:'',\n\t\toptionsSelected:'',\n\t\titemID:5e778,\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.getPlan();\n\t}\n\t\t\n\tgetPlan = async () => {\n\t\tconsole.log(\"lll\")\n\t\tconst {itemID} = this.state;\n\t\tconst doc = await axiosInstance.get('api/freeone', { params: { itemID } });\n\t\tthis.setState({itemDetails:doc.data},() => {\n\t\t\tconsole.log(this.state.itemDetails)\n\t\t})\n\t};\n\n\tpostParticipant = async () => {\n\t\tconst {partipicantName,optionsSelected,itemID} = this.state;\n\t\tconst doc = await axiosInstance.post(\n\t\t\t'api/participant',\n\t\t\t{ partipicantName, optionsSelected },\n\t\t\t{ params: { itemID } }\n\t\t);\n\t\t// const doc = await axiosInstance.post('api/participant', { params: { itemID } });\n\t\tconsole.log(doc);\n\t};\n\n\tcheckboxTest = async e => {\n\t\tconst {optionsSelected} = this.state;\n\t\tif (e.target.checked) {\n\t\t\tthis.setState({optionsSelected:[...optionsSelected, e.target.id]})\n\t\t\treturn;\n\t\t}\n\t\tlet tempOptionsSelected = [...optionsSelected];\n\t\tconst check = tempOptionsSelected.indexOf(e.target.id);\n\t\tif (check > -1) tempOptionsSelected.splice(check, 1);\n\t\tthis.setState({optionsSelected:tempOptionsSelected})\n\t};\n\trender (){\n\t\tconst {itemDetails} = this.state;\n\treturn (\n\t\t<Layout>\n\t\t\t<div className=\"container\">\n\t\t\t\t<br />\n\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t<div className=\"column is-1\"></div>\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<div className=\"is-fullwidth\" style={{ padding: '.5rem', backgroundColor: '#C8E4FF' }}>\n\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tconsole.log(this.state.optionsSelected);\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tPoll by <strong>{itemDetails.nameGenerater}</strong>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div className=\"columns\">\n\t\t\t\t\t\t\t<div className=\"column is-5\">\n\t\t\t\t\t\t\t\t<p className=\"title has-text-info has-text-weight-normal\">{itemDetails.boardTitle}</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{itemDetails.description\n\t\t\t\t\t\t\t\t\t\t? itemDetails.description\n\t\t\t\t\t\t\t\t\t\t: \"Please indicate when you are available. Then click 'Save'.\"}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<table className=\"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\">\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t<th style={{ border: 'none' }}></th>\n\n\t\t\t\t\t\t\t\t\t\t{/* Put possible dates as table headers */}\n\t\t\t\t\t\t\t\t\t\t{itemDetails.possibleDates\n\t\t\t\t\t\t\t\t\t\t\t? itemDetails.possibleDates.map((element, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th className=\"has-background-grey-lighter has-text-centered\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{element}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<tr className=\"be-first\">\n\t\t\t\t\t\t\t\t\t\t\t<td className=\"has-background-primary has-text-white\" colSpan=\"100%\">\n\t\t\t\t\t\t\t\t\t\t\t\tBe the first to vote in this poll!\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr style={{ backgroundColor: '#C8E4FF' }}>\n\t\t\t\t\t\t\t\t\t\t\t<td style={{ borderColor: 'white' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"field\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"control\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"input is-primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Your name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({partipicantName:e.target.value})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t\t\t\t{/* Columns which has checkbox to check possible dates*/}\n\t\t\t\t\t\t\t\t\t\t\t{itemDetails.possibleDates\n\t\t\t\t\t\t\t\t\t\t\t\t? itemDetails.possibleDates.map((element, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ borderColor: 'white' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"has-text-centered\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"checkbox\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid={index}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.checkboxTest}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t<a className=\"button is-link has-text-right\" onClick={this.postParticipant}>\n\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"column is-5\"></div>\n\t\t\t\t\t\t\t<div className=\"column is-2\">x</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column is-1\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n}\n//export default ItemDetailsPage;\n// 5e708dce790a493928aac6f0"]},"metadata":{},"sourceType":"module"}