{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/abugra/Desktop/MeetingPlanner-client/pages/plan/[itemID].js\";\nvar __jsx = React.createElement;\n//import { useRouter } from 'next/router'; // not usable for class components, we can try to use withRouter as alternative\nimport { withRouter } from \"next/router\";\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport axiosInstance from \"../../config\";\n\nvar ItemDetailsPage = /*#__PURE__*/function (_Component) {\n  _inherits(ItemDetailsPage, _Component);\n\n  function ItemDetailsPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ItemDetailsPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ItemDetailsPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      partipicantName: \"\",\n      itemDetails: \"\",\n      optionsSelected: \"\",\n      itemID: \"5e77a\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPlan\", function _callee() {\n      var itemID, doc;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              itemID = _this.state.itemID;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axiosInstance.get(\"api/freeone\", {\n                params: {\n                  itemID: itemID\n                }\n              }));\n\n            case 3:\n              doc = _context.sent;\n\n              _this.setState({\n                itemDetails: doc.data\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"postParticipant\", function _callee2() {\n      var _this$state, partipicantName, optionsSelected, itemID, doc;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, partipicantName = _this$state.partipicantName, optionsSelected = _this$state.optionsSelected, itemID = _this$state.itemID;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(axiosInstance.post(\"api/participant\", {\n                partipicantName: partipicantName,\n                optionsSelected: optionsSelected\n              }, {\n                params: {\n                  itemID: itemID\n                }\n              }));\n\n            case 3:\n              doc = _context2.sent;\n              // const doc = await axiosInstance.post('api/participant', { params: { itemID } });\n              console.log(doc);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"checkboxTest\", function _callee3(e) {\n      var optionsSelected, tempOptionsSelected, check;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              optionsSelected = _this.state.optionsSelected;\n\n              if (!e.target.checked) {\n                _context3.next = 4;\n                break;\n              }\n\n              _this.setState({\n                optionsSelected: [].concat(_toConsumableArray(optionsSelected), [e.target.id])\n              });\n\n              return _context3.abrupt(\"return\");\n\n            case 4:\n              tempOptionsSelected = _toConsumableArray(optionsSelected);\n              check = tempOptionsSelected.indexOf(e.target.id);\n              if (check > -1) tempOptionsSelected.splice(check, 1);\n\n              _this.setState({\n                optionsSelected: tempOptionsSelected\n              });\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ItemDetailsPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getPlan();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var itemDetails = this.state.itemDetails;\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"column is-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"is-fullwidth\",\n        style: {\n          padding: \".5rem\",\n          backgroundColor: \"#C8E4FF\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        onClick: function onClick() {\n          console.log(_this2.state.optionsSelected);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Poll by\", \" \", __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, itemDetails.nameGenerater))), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"column is-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        className: \"title has-text-info has-text-weight-normal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, itemDetails.boardTitle), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, itemDetails.description ? itemDetails.description : \"Please indicate when you are available. Then click 'Save'.\"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), __jsx(\"table\", {\n        className: \"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, __jsx(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __jsx(\"th\", {\n        style: {\n          border: \"none\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), itemDetails.possibleDates ? itemDetails.possibleDates.map(function (element, index) {\n        return __jsx(\"th\", {\n          className: \"has-background-grey-lighter has-text-centered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, element);\n      }) : null), __jsx(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, __jsx(\"tr\", {\n        className: \"be-first\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, __jsx(\"td\", {\n        className: \"has-background-primary has-text-white\",\n        colSpan: \"100%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Be the first to vote in this poll!\")), __jsx(\"tr\", {\n        style: {\n          backgroundColor: \"#C8E4FF\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, __jsx(\"td\", {\n        style: {\n          borderColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        \"class\": \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        \"class\": \"control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        \"class\": \"input is-primary\",\n        type: \"text\",\n        placeholder: \"Your name\",\n        onChange: function onChange(e) {\n          _this2.setState({\n            partipicantName: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })))), itemDetails.possibleDates ? itemDetails.possibleDates.map(function (element, index) {\n        return __jsx(\"td\", {\n          style: {\n            borderColor: \"white\"\n          },\n          className: \"has-text-centered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          \"class\": \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, __jsx(\"input\", {\n          type: \"checkbox\",\n          id: index,\n          onChange: _this2.checkboxTest,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        })));\n      }) : null))), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        className: \"button is-link has-text-right\",\n        onClick: this.postParticipant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Save\")), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"column is-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"column is-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"x\"))), __jsx(\"div\", {\n        className: \"column is-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ItemDetailsPage;\n}(Component); //export default ItemDetailsPage;\n// 5e708dce790a493928aac6f0\n\n\nexport { ItemDetailsPage as default };","map":{"version":3,"sources":["/home/abugra/Desktop/MeetingPlanner-client/pages/plan/[itemID].js"],"names":["withRouter","React","Component","Layout","axiosInstance","ItemDetailsPage","partipicantName","itemDetails","optionsSelected","itemID","state","get","params","doc","setState","data","post","console","log","e","target","checked","id","tempOptionsSelected","check","indexOf","splice","getPlan","padding","backgroundColor","nameGenerater","boardTitle","description","border","possibleDates","map","element","index","borderColor","value","checkboxTest","postParticipant"],"mappings":"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","sourcesContent":["//import { useRouter } from 'next/router'; // not usable for class components, we can try to use withRouter as alternative\nimport { withRouter } from \"next/router\";\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport axiosInstance from \"../../config\";\n\nexport default class ItemDetailsPage extends Component {\n                 state = {\n                   partipicantName: \"\",\n                   itemDetails: \"\",\n                   optionsSelected: \"\",\n                   itemID: \"5e77a\"\n                 };\n\n                 componentDidMount() {\n                   this.getPlan();\n                 }\n\n                 getPlan = async () => {\n                   const { itemID } = this.state;\n                   const doc = await axiosInstance.get(\"api/freeone\", {\n                     params: { itemID }\n                   });\n                   this.setState({ itemDetails: doc.data });\n                 };\n\n                 postParticipant = async () => {\n                   const {\n                     partipicantName,\n                     optionsSelected,\n                     itemID\n                   } = this.state;\n                   const doc = await axiosInstance.post(\n                     \"api/participant\",\n                     { partipicantName, optionsSelected },\n                     { params: { itemID } }\n                   );\n                   // const doc = await axiosInstance.post('api/participant', { params: { itemID } });\n                   console.log(doc);\n                 };\n\n                 checkboxTest = async e => {\n                   const { optionsSelected } = this.state;\n                   if (e.target.checked) {\n                     this.setState({\n                       optionsSelected: [...optionsSelected, e.target.id]\n                     });\n                     return;\n                   }\n                   let tempOptionsSelected = [...optionsSelected];\n                   const check = tempOptionsSelected.indexOf(e.target.id);\n                   if (check > -1) tempOptionsSelected.splice(check, 1);\n                   this.setState({ optionsSelected: tempOptionsSelected });\n                 };\n                 render() {\n                   const { itemDetails } = this.state;\n                   return (\n                     <Layout>\n                       <div className=\"container\">\n                         <br />\n                         <div className=\"columns\">\n                           <div className=\"column is-1\"></div>\n                           <div className=\"column\">\n                             <div\n                               className=\"is-fullwidth\"\n                               style={{\n                                 padding: \".5rem\",\n                                 backgroundColor: \"#C8E4FF\"\n                               }}\n                             >\n                               <p\n                                 onClick={() => {\n                                   console.log(this.state.optionsSelected);\n                                 }}\n                               >\n                                 Poll by{\" \"}\n                                 <strong>{itemDetails.nameGenerater}</strong>\n                               </p>\n                             </div>\n                             <br />\n                             <div className=\"columns\">\n                               <div className=\"column is-5\">\n                                 <p className=\"title has-text-info has-text-weight-normal\">\n                                   {itemDetails.boardTitle}\n                                 </p>\n                                 <p>\n                                   {itemDetails.description\n                                     ? itemDetails.description\n                                     : \"Please indicate when you are available. Then click 'Save'.\"}\n                                 </p>\n                                 <br />\n                                 <table className=\"table is-bordered is-striped is-narrow is-hoverable is-fullwidth\">\n                                   <thead>\n                                     <th style={{ border: \"none\" }}></th>\n\n                                     {/* Put possible dates as table headers */}\n                                     {itemDetails.possibleDates\n                                       ? itemDetails.possibleDates.map(\n                                           (element, index) => (\n                                             <th className=\"has-background-grey-lighter has-text-centered\">\n                                               {element}\n                                             </th>\n                                           )\n                                         )\n                                       : null}\n                                   </thead>\n                                   <tbody>\n                                     <tr className=\"be-first\">\n                                       <td\n                                         className=\"has-background-primary has-text-white\"\n                                         colSpan=\"100%\"\n                                       >\n                                         Be the first to vote in this poll!\n                                       </td>\n                                     </tr>\n                                     <tr style={{ backgroundColor: \"#C8E4FF\" }}>\n                                       <td style={{ borderColor: \"white\" }}>\n                                         <div class=\"field\">\n                                           <div class=\"control\">\n                                             <input\n                                               class=\"input is-primary\"\n                                               type=\"text\"\n                                               placeholder=\"Your name\"\n                                               onChange={e => {\n                                                 this.setState({\n                                                   partipicantName:\n                                                     e.target.value\n                                                 });\n                                               }}\n                                             />\n                                           </div>\n                                         </div>\n                                       </td>\n\n                                       {/* Columns which has checkbox to check possible dates*/}\n                                       {itemDetails.possibleDates\n                                         ? itemDetails.possibleDates.map(\n                                             (element, index) => (\n                                               <td\n                                                 style={{\n                                                   borderColor: \"white\"\n                                                 }}\n                                                 className=\"has-text-centered\"\n                                               >\n                                                 <label class=\"checkbox\">\n                                                   <input\n                                                     type=\"checkbox\"\n                                                     id={index}\n                                                     onChange={\n                                                       this.checkboxTest\n                                                     }\n                                                   />\n                                                 </label>\n                                               </td>\n                                             )\n                                           )\n                                         : null}\n                                     </tr>\n                                   </tbody>\n                                 </table>\n                                 <p>\n                                   <a\n                                     className=\"button is-link has-text-right\"\n                                     onClick={this.postParticipant}\n                                   >\n                                     Save\n                                   </a>\n                                 </p>\n                                 <br />\n                               </div>\n                               <div className=\"column is-5\"></div>\n                               <div className=\"column is-2\">x</div>\n                             </div>\n                           </div>\n                           <div className=\"column is-1\"></div>\n                         </div>\n                       </div>\n                     </Layout>\n                   );\n                 }\n               }\n//export default ItemDetailsPage;\n// 5e708dce790a493928aac6f0\n"]},"metadata":{},"sourceType":"module"}